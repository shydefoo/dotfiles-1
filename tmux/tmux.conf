# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# configure tmux to use reattach-to-user-namespace wrapper programe to start shell for each new window
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# 0 is too far from ` ðŸ˜‰
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# set -g default-terminal xterm-256color
set-option -g default-terminal "screen-256color"
# set -g terminal-overrides ",*256col*:Tc"
set-option -sa terminal-overrides ',alacritty:RGB'
set -g status-keys vi
set -g history-limit 10000

# enable mouse
setw -g mouse on

# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use copy-mode -eM instead of copy-mode -M, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'

setw -g monitor-activity on

# split using v and s
bind-key v split-window -h
bind-key s split-window -v

# Remap pane/window splitting to use current pane path
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# THEME
# set -g status-bg black
# set -g status-fg white
# set -g window-status-current bg=white,fg=black
# set -g window-status-current-attr bold
# set -g status-interval 60
# set -g status-left-length 30
# set -g status-left '#[fg=green](#S) #(whoami)'
# set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

set -g status-bg 'colour235'
set -g message-command-style fg='colour222',bg="colour238"
set -g status-justify 'left'
set -g status-left-length '100'
set -g status 'on'
set -g pane-active-border-style fg='colour0'
set -g message-style bg='colour235',fg='colour111'
set -g status-right-length '100'
set -g status-right-style 'none'
set -g status-style 'none'
set -g pane-border-style fg='colour239'
set -g status-left-style 'none'
setw -g window-status-style fg='colour121'
setw -g window-status-style 'none'
setw -g window-status-activity-style 'none'
setw -g window-status-activity-style fg='colour154',bg='colour235'
setw -g window-status-separator ''
setw -g window-status-style bg='colour235'
set -g status-left '#[fg=colour232,bg=colour111] #S #[fg=colour111,bg=colour235,nobold,nounderscore,noitalics]î‚°#[fg=colour121,bg=colour235] #(whoami) î‚± Keep Coding #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]î‚°'
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]î‚²#[fg=colour121,bg=colour235] %r î‚³ %a î‚³ %d/%m/%Y #[fg=colour111,bg=colour235,nobold,nounderscore,noitalics]î‚²#[fg=colour232,bg=colour111] #(tmux-spotify-info)#[fg=colour232,bg=colour111] ~'
setw -g window-status-format '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]î‚°#[default]#I î‚± #W#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]î‚°'
setw -g window-status-current-format '#[fg=colour232,bg=colour194,nobold,nounderscore,noitalics]î‚°#[fg=colour232,bg=colour194]#I î‚± #W î‚± #F#[fg=colour194,bg=colour235,nobold,nounderscore,noitalics]î‚°'

# bell config
# set-window-option -g monitor-bell on
# set-window-option -g bell-action any
# set-window-option -g activity-action other

# Use v to trigger selection    
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Use y to yank current selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# cycle thru tmux panes in zoom mode without zooming out
bind -r _ select-pane -t .+1 \;  resize-pane -Z
bind -r + select-pane -t .-1 \;  resize-pane -Z

bind-key / copy-mode \; send-key ?

# reload ~/.tmux.conf using prefix r
bind r source-file ~/.tmux.conf \; display "tmux reloaded"

# plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @colors-solarized 'dark'

# continum options
set -g @continuum-restore 'on'

# smart panes
set -g @plugin 'christoomey/vim-tmux-navigator'
# for neovim
set -g @resurrect-strategy-nvim 'session'
run '~/.tmux/plugins/tpm/tpm'

set -g pane-border-status bottom
